{"version":3,"file":"Contact-28c1728a.js","sources":["../../node_modules/@emailjs/browser/es/store/store.js","../../node_modules/@emailjs/browser/es/methods/init/init.js","../../node_modules/@emailjs/browser/es/utils/validateParams.js","../../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../../node_modules/@emailjs/browser/es/api/sendPost.js","../../node_modules/@emailjs/browser/es/methods/send/send.js","../../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../../node_modules/@emailjs/browser/es/index.js","../../src/components/Contact.tsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import React, { useState, useRef } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { contactData, toastMessages } from \"../assets/lib/data.tsx\";\r\nimport { useSectionInView } from \"../assets/lib/hooks\";\r\nimport { useLanguage } from \"../context/language-context\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useTheme } from \"../context/theme-context\";\r\nimport { motion, useScroll, useTransform } from \"framer-motion\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport emailjs from \"@emailjs/browser\";\r\n\r\nconst Contact: React.FC = () => {\r\n  const { ref } = useSectionInView(\"Contact\");\r\n  const { language } = useLanguage();\r\n  const { theme } = useTheme();\r\n\r\n  const animationReference = useRef<HTMLDivElement>(null);\r\n  const { scrollYProgress } = useScroll({\r\n    target: animationReference,\r\n    offset: [\"0 1\", \"1.33 1\"],\r\n  });\r\n  const scaleProgess = useTransform(scrollYProgress, [0, 1], [0.8, 1]);\r\n  const opacityProgess = useTransform(scrollYProgress, [0, 1], [0.6, 1]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const sendEmail = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n  \r\n    const { name, email, subject, message } = formData;\r\n  \r\n    const templateParams = {\r\n      to_name: \"Recipient Name\",\r\n      from_name: name,\r\n      from_email: email,\r\n      subject: subject,\r\n      message: message,\r\n    };\r\n  \r\n    console.log(\"Template Params:\", templateParams); // Debugging log\r\n  \r\n    try {\r\n      await emailjs.send(\r\n        \"service_e88m3up\", // Service ID\r\n        \"template_674x006\", // Template ID\r\n        templateParams,\r\n        \"X12Ja9k4GnbP7Pxee\" // Public Key\r\n      );\r\n  \r\n      toast.success(\r\n        language === \"DE\"\r\n          ? toastMessages.successEmailSent.de\r\n          : toastMessages.successEmailSent.en\r\n      );\r\n  \r\n      setFormData({ name: \"\", email: \"\", subject: \"\", message: \"\" });\r\n  \r\n      alert(\"Your email has been successfully sent!\");\r\n    } catch (error) {\r\n      console.error(\"EmailJS error:\", error);\r\n      toast.error(\r\n        language === \"DE\"\r\n          ? toastMessages.failedEmailSent.de\r\n          : toastMessages.failedEmailSent.en\r\n      );\r\n    }\r\n  };\r\n   \r\n  return (\r\n    <React.Fragment>\r\n      <section\r\n        className=\"contact-container w-full min-[1921px]:px-[55rem] mt-16\"\r\n        id=\"contact\"\r\n      >\r\n        <div\r\n          className=\"title-container flex flex-col gap-6 justify-center items-center py-16  max-lg:p-16\"\r\n          ref={ref}\r\n        >\r\n          <motion.div\r\n            ref={animationReference}\r\n            style={{\r\n              scale: scaleProgess,\r\n              opacity: opacityProgess,\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <p className=\"text-[--black] mb-6\">\r\n              <span className=\"text-[--orange]\">&lt;</span>\r\n              {language === \"DE\" ? contactData.title.de : contactData.title.en}\r\n              <span className=\"text-[--orange]\">/&gt;</span>\r\n            </p>\r\n            <h2 className=\"text-[--black] text-center\">\r\n              {language === \"DE\"\r\n                ? contactData.description.de\r\n                : contactData.description.en}\r\n            </h2>\r\n          </motion.div>\r\n        </div>\r\n        <div className=\"flex flex-row justify-center items-start px-32 pt-32 mb-32 max-lg:flex-col max-lg:p-10\">\r\n          <form\r\n            className=\"flex flex-col gap-6 justify-center items-center  px-32 w-1/2 max-lg:w-full max-lg:p-10\"\r\n            onSubmit={sendEmail}\r\n            autoComplete=\"off\"\r\n          >\r\n            {contactData.inputfields.map((input, index) => (\r\n              <input\r\n                key={index}\r\n                type={input.type}\r\n                placeholder={\r\n                  language === \"DE\"\r\n                    ? `${input.placeholder.de}`\r\n                    : `${input.placeholder.en}`\r\n                }\r\n                name={input.name}\r\n                value={formData[input.name as keyof typeof formData]}\r\n                required\r\n                onChange={handleInputChange}\r\n                className={`${\r\n                  theme === \"dark\"\r\n                    ? \"bg-[--blackblue] dark-mode-shadow \"\r\n                    : \"bg-[--icewhite] dark-shadow \"\r\n                }`}\r\n              />\r\n            ))}\r\n            <textarea\r\n              rows={contactData.textarea.rows}\r\n              placeholder={\r\n                language === \"DE\"\r\n                  ? `${contactData.textarea.placeholder.de}`\r\n                  : `${contactData.textarea.placeholder.en}`\r\n              }\r\n              name={contactData.textarea.name}\r\n              value={formData.message}\r\n              onChange={handleInputChange}\r\n              className={`${\r\n                theme === \"dark\"\r\n                  ? \"bg-[--blackblue] dark-mode-shadow\"\r\n                  : \"bg-[--icewhite] dark-shadow\"\r\n              }`}\r\n            />\r\n            <Button\r\n              value={\r\n                language === \"DE\"\r\n                  ? `${contactData.button.value.de}`\r\n                  : `${contactData.button.value.en}`\r\n              }\r\n              iconSVG={contactData.icon}\r\n              buttoncolor={contactData.colors.main}\r\n              iconcolor={contactData.colors.icon}\r\n              type=\"submit\"\r\n              elementType=\"input\"\r\n            />\r\n            <ToastContainer\r\n              className=\"w-max text-3xl block p-3 max-lg:w-full \"\r\n              position=\"bottom-center\"\r\n              autoClose={5000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n              theme={theme}\r\n            />\r\n          </form>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["store","init","publicKey","origin","validateParams","serviceID","templateID","EmailJSResponseStatus","httpResponse","sendPost","url","data","headers","resolve","reject","xhr","target","responseStatus","key","send","templatePrams","uID","findHTMLForm","form","currentForm","sendForm","formData","emailjs","Contact","ref","useSectionInView","language","useLanguage","theme","useTheme","animationReference","useRef","scrollYProgress","useScroll","scaleProgess","useTransform","opacityProgess","setFormData","useState","handleInputChange","e","name","value","prevData","sendEmail","email","subject","message","templateParams","toast","toastMessages","error","jsx","React","jsxs","motion","contactData","input","index","Button","ToastContainer"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}